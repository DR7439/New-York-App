name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get current timestamp
        id: vars
        run: echo "::set-output name=timestamp::$(date +%Y%m%d%H%M%S)"

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy to VM
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          VM_HOST: ${{ secrets.VM_HOST }}
          VM_USER: ${{ secrets.VM_USER }}
          IMAGE_TAG: ${{ steps.vars.outputs.timestamp }}
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DJANGO_SUPERUSER_USERNAME: ${{ secrets.DJANGO_SUPERUSER_USERNAME }}
          DJANGO_SUPERUSER_EMAIL: ${{ secrets.DJANGO_SUPERUSER_EMAIL }}
          DJANGO_SUPERUSER_PASSWORD: ${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
          EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
          CHOKIDAR_USEPOLLING: ${{ secrets.CHOKIDAR_USEPOLLING }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $VM_USER@$VM_HOST <<EOF
          if [ -d '~/Summer_Project/New-York-App' ]; then
            cd ~/Summer_Project/New-York-App && git pull origin main;
          else
            git clone https://$PERSONAL_ACCESS_TOKEN@github.com/DR7439/New-York-App.git ~/Summer_Project/New-York-App;
          fi
          cd ~/Summer_Project/New-York-App
          echo "SECRET_KEY=$SECRET_KEY" > .env
          echo "DEBUG=$DEBUG" >> .env
          echo "DB_NAME=$DB_NAME" >> .env
          echo "DB_USER=$DB_USER" >> .env
          echo "DB_PASSWORD=$DB_PASSWORD" >> .env
          echo "DB_HOST=$DB_HOST" >> .env
          echo "DB_PORT=$DB_PORT" >> .env
          echo "CHOKIDAR_USEPOLLING=$CHOKIDAR_USEPOLLING" >> .env
          echo "DJANGO_SUPERUSER_USERNAME=$DJANGO_SUPERUSER_USERNAME" >> .env
          echo "DJANGO_SUPERUSER_EMAIL=$DJANGO_SUPERUSER_EMAIL" >> .env
          echo "DJANGO_SUPERUSER_PASSWORD=$DJANGO_SUPERUSER_PASSWORD" >> .env
          echo "EMAIL_HOST_USER=$EMAIL_HOST_USER" >> .env
          echo "EMAIL_HOST_PASSWORD=$EMAIL_HOST_PASSWORD" >> .env
          docker-compose -f ~/Summer_Project/New-York-App/docker-compose.yaml up -d --build
          EOF
